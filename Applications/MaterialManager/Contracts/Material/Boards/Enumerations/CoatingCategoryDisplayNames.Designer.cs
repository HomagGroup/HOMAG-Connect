//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HomagConnect.MaterialManager.Contracts.Material.Boards.Enumerations {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class CoatingCategoryDisplayNames {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal CoatingCategoryDisplayNames() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("HomagConnect.MaterialManager.Contracts.Material.Boards.Enumerations.CoatingCatego" +
                            "ryDisplayNames", typeof(CoatingCategoryDisplayNames).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Aluminium.
        /// </summary>
        public static string Aluminium {
            get {
                return ResourceManager.GetString("Aluminium", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Schichtstoffe bestehend aus Dekorpapier.
        /// </summary>
        public static string DecorativePaper {
            get {
                return ResourceManager.GetString("DecorativePaper", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HPL.
        /// </summary>
        public static string HPL {
            get {
                return ResourceManager.GetString("HPL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Glaslaminat (PMMA).
        /// </summary>
        public static string LaminatedGlass_PMMA {
            get {
                return ResourceManager.GetString("LaminatedGlass_PMMA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Melamin (Duroplast).
        /// </summary>
        public static string MelamineThermoset {
            get {
                return ResourceManager.GetString("MelamineThermoset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Lackiert.
        /// </summary>
        public static string Painted {
            get {
                return ResourceManager.GetString("Painted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Schutzfolie.
        /// </summary>
        public static string ProtectiveFilm {
            get {
                return ResourceManager.GetString("ProtectiveFilm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Echtmetall.
        /// </summary>
        public static string RealMetal {
            get {
                return ResourceManager.GetString("RealMetal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unbeschichtet.
        /// </summary>
        public static string Uncoated {
            get {
                return ResourceManager.GetString("Uncoated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Undefiniert.
        /// </summary>
        public static string Undefined {
            get {
                return ResourceManager.GetString("Undefined", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Furnier.
        /// </summary>
        public static string Veneer {
            get {
                return ResourceManager.GetString("Veneer", resourceCulture);
            }
        }
    }
}
